# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 Julian-Samuel Geb√ºhr
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/knadh/listmonk

listmonk_enabled: true

listmonk_identifier: listmonk
listmonk_base_path: "/{{ listmonk_identifier }}"
listmonk_data_path: "{{ listmonk_base_path }}/data"

# renovate: datasource=docker depName=listmonk/listmonk
listmonk_version: 4.1.0

listmonk_uid: ''
listmonk_gid: ''

# The hostname at which listmonk is served.
listmonk_hostname: ''

listmonk_path_prefix: /

listmonk_container_image: "{{ listmonk_container_image_registry_prefix }}listmonk/listmonk:{{ listmonk_container_image_tag }}"
listmonk_container_image_registry_prefix: "{{ listmonk_container_image_registry_prefix_upstream }}"
listmonk_container_image_registry_prefix_upstream: "{{ listmonk_container_image_registry_prefix_upstream_default }}"
listmonk_container_image_registry_prefix_upstream_default: docker.io/
listmonk_container_image_tag: "v{{ listmonk_version }}"
listmonk_container_image_force_pull: "{{ listmonk_container_image.endswith(':latest') }}"

# Controls whether the listmonk container exposes its HTTP port (as defined by `listmonk_container_http_port`).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:8731"), or empty string to not expose.
listmonk_container_http_host_bind_port: ""

# The base container network. It will be auto-created by this role if it doesn't exist already.
listmonk_container_network: '{{ listmonk_identifier }}'

# The port number in the container
listmonk_container_http_port: 9000

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to a reverse proxy, which runs in a different container network.
listmonk_container_additional_networks: "{{ listmonk_container_additional_networks_auto + listmonk_container_additional_networks_custom }}"
listmonk_container_additional_networks_auto: []
listmonk_container_additional_networks_custom: []

# listmonk_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `listmonk_container_labels_additional_labels`.
listmonk_container_labels_traefik_enabled: true
listmonk_container_labels_traefik_docker_network: "{{ listmonk_container_network }}"
listmonk_container_labels_traefik_hostname: "{{ listmonk_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/listmonk`).
listmonk_container_labels_traefik_path_prefix: "{{ listmonk_path_prefix }}"
listmonk_container_labels_traefik_rule: "Host(`{{ listmonk_container_labels_traefik_hostname }}`){% if listmonk_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ listmonk_container_labels_traefik_path_prefix }}`){% endif %}"
listmonk_container_labels_traefik_priority: 0
listmonk_container_labels_traefik_entrypoints: web-secure
listmonk_container_labels_traefik_tls: "{{ listmonk_container_labels_traefik_entrypoints != 'web' }}"
listmonk_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `listmonk_container_labels_traefik_additional_request_headers_custom`
listmonk_container_labels_traefik_additional_request_headers: "{{ listmonk_container_labels_traefik_additional_request_headers_auto | combine(listmonk_container_labels_traefik_additional_request_headers_custom) }}"
listmonk_container_labels_traefik_additional_request_headers_auto: {}
listmonk_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `listmonk_container_labels_traefik_additional_response_headers_custom`
listmonk_container_labels_traefik_additional_response_headers: "{{ listmonk_container_labels_traefik_additional_response_headers_auto | combine(listmonk_container_labels_traefik_additional_response_headers_custom) }}"
listmonk_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': listmonk_http_header_xss_protection} if listmonk_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': listmonk_http_header_content_type_options} if listmonk_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': listmonk_http_header_content_security_policy} if listmonk_http_header_content_security_policy else {})
    | combine ({'Permissions-Policy': listmonk_http_header_permissions_policy} if listmonk_http_header_permissions_policy else {})
    | combine ({'Strict-Transport-Security': listmonk_http_header_strict_transport_security} if listmonk_http_header_strict_transport_security and listmonk_container_labels_traefik_tls else {})
  }}
listmonk_container_labels_traefik_additional_response_headers_custom: {}

# listmonk_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# listmonk_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
listmonk_container_labels_additional_labels: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
listmonk_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
listmonk_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
listmonk_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permissions-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy
listmonk_http_header_permissions_policy: "{{ 'interest-cohort=()' if listmonk_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
listmonk_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if listmonk_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `listmonk_http_header_permissions_policy`
listmonk_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `listmonk_http_header_strict_transport_security`
listmonk_hsts_preload_enabled: false

# List of systemd services that the listmonk systemd service depends on
listmonk_systemd_required_services_list: "{{ listmonk_systemd_required_services_list_default + listmonk_systemd_required_services_list_auto + listmonk_systemd_required_services_list_custom }}"
listmonk_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
listmonk_systemd_required_services_list_auto: []
listmonk_systemd_required_services_list_custom: []

# List of systemd services that the listmonk systemd service wants
listmonk_systemd_wanted_services_list: "{{ listmonk_systemd_wanted_services_list_default + listmonk_systemd_wanted_services_list_auto + listmonk_systemd_wanted_services_list_custom }}"
listmonk_systemd_wanted_services_list_default: []
listmonk_systemd_wanted_services_list_auto: []
listmonk_systemd_wanted_services_list_custom: []

listmonk_database_hostname: ''
listmonk_database_port: 5432
listmonk_database_name: listmonk
listmonk_database_username: listmonk
listmonk_database_password: ''
# Use this to set the sslmode parameter of the SSL connection
# By default, we expect a local container (without SSL), so attempting SSL connections is not necessary.
listmonk_database_sslmode: disable

# Additional environment variables to pass to the listmonk container.
# You can use this to further influence the default configuration.
#
# Example:
# listmonk_environment_variables_additional_variables: |
#   LISTMONK_ADMIN_USER=admin
#   LISTMONK_ADMIN_PASSWORD=SUPERSECRETPASSWORD
listmonk_environment_variables_additional_variables: ''
